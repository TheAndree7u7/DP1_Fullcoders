# ======================================================
# CONFIGURACIÓN GENERAL DE LA APLICACIÓN
# ======================================================
# Nombre de la aplicación que aparece en actuators y logs
spring.application.name=PLG Application

# ======================================================
# CONFIGURACIÓN DEL SERVIDOR EMBEBIDO
# ======================================================
# Puerto en el que se ejecuta la aplicación
server.port=8085
# Modo de apagado: espera a que terminen las peticiones en curso
server.shutdown=graceful
# Tiempo máximo de espera para el cierre de cada fase durante el apagado (30 segundos)
spring.lifecycle.timeout-per-shutdown-phase=30s

# ======================================================
# CONFIGURACIÓN DE BASE DE DATOS H2 EN MEMORIA
# ======================================================
# URL de conexión - base de datos en memoria llamada plgdb
spring.datasource.url=jdbc:h2:mem:plgdb
# Driver JDBC para la base de datos H2
spring.datasource.driverClassName=org.h2.Driver
# Usuario para acceder a la base de datos
spring.datasource.username=sa
# Contraseña de acceso
spring.datasource.password=password
# Dialecto de Hibernate para H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# ======================================================
# CONFIGURACIÓN DE JMX (Java Management Extensions)
# ======================================================
# Deshabilita JMX para evitar conflictos de puertos en desarrollo
spring.jmx.enabled=false

# ======================================================
# CONFIGURACIÓN DE CONSOLA H2
# ======================================================
# Activa la consola web para gestión de la base de datos H2
spring.h2.console.enabled=true
# Ruta de acceso a la consola H2
spring.h2.console.path=/h2-console

# ======================================================
# CONFIGURACIÓN DE JPA/HIBERNATE
# ======================================================
# Modo de actualización del esquema: actualiza tablas existentes según las entidades
spring.jpa.hibernate.ddl-auto=update
# Desactiva la impresión de consultas SQL en los logs
spring.jpa.show-sql=false
# Formatea las consultas SQL para mejor legibilidad (si show-sql=true)
spring.jpa.properties.hibernate.format_sql=true

# ======================================================
# CONFIGURACIÓN DE JACKSON PARA JSON
# ======================================================
# Evita errores cuando se serializan beans vacíos
spring.jackson.serialization.fail-on-empty-beans=false
# Formato para fechas en las respuestas JSON
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
# Zona horaria para fechas
spring.jackson.time-zone=America/Lima
# Ignora propiedades desconocidas durante la deserialización
spring.jackson.deserialization.fail-on-unknown-properties=false

# ======================================================
# CONFIGURACIÓN DE WEBSOCKET
# ======================================================
# Tamaño máximo de mensaje de texto (1MB)
spring.websocket.max-text-message-size=1048576
# Tamaño máximo de mensaje binario (1MB)
spring.websocket.max-binary-message-size=1048576

# ======================================================
# CONFIGURACIÓN DE LOGGING
# ======================================================
# Nivel de logs para Spring Framework (INFO: eventos importantes)
logging.level.org.springframework=INFO
# Nivel de logs para componentes propios de la aplicación
logging.level.com.plg=INFO
# Nivel de logs para WebSockets (WARN: solo advertencias y errores)
logging.level.org.springframework.web.socket=WARN

# ======================================================
# CONFIGURACIÓN DE SUBIDA DE ARCHIVOS
# ======================================================
# Tamaño máximo permitido para archivos individuales
spring.servlet.multipart.max-file-size=10MB
# Tamaño máximo permitido para la solicitud completa
spring.servlet.multipart.max-request-size=10MB

# ======================================================
# RUTAS DE ARCHIVOS DE DATOS
# ======================================================
# Ruta a los archivos de pedidos (ventas)
app.data.pedidos-path=classpath:data/pedidos/
# Ruta a los archivos de mantenimientos preventivos
app.data.mantenimientos-path=classpath:data/mantenimientos/
# Ruta a los archivos de bloqueos de carreteras
app.data.bloqueos-path=classpath:data/bloqueos/
# Ruta a los archivos de averías de vehículos
app.data.averias-path=classpath:data/averias/
# Ruta a la información de almacenes
app.data.almacenes-path=classpath:data/almacenes/
# Ruta a la información de camiones
app.data.camiones-path=classpath:data/camiones/

# ======================================================
# CONFIGURACIÓN DE RECURSOS ESTÁTICOS
# ======================================================
# Patrón para acceder a recursos estáticos desde el navegador
spring.mvc.static-path-pattern=/**
# Ubicación de archivos estáticos en el classpath
spring.web.resources.static-locations=classpath:/static/
# Lanza excepción si no hay un controlador para una ruta
spring.mvc.throw-exception-if-no-handler-found=true
# Habilita la salida con colores ANSI en la consola
spring.output.ansi.enabled=always



